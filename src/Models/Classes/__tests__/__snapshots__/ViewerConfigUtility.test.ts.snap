// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ViewerConfigUtility Scene Visuals returns visuals even when no elements are part of behaviors (ie. no twin data) 1`] = `
Array [
  SceneVisual {
    "behaviors": Array [],
    "coloredMeshItems": undefined,
    "element": Object {
      "displayName": "MockElement1",
      "id": "MockElementId1",
      "objectIDs": Array [
        "elementObject1",
        "elementObject2",
      ],
      "primaryTwinID": "mockElementTwinId1",
      "type": "TwinToObjectMapping",
    },
    "twins": Object {
      "PrimaryTwin": undefined,
    },
  },
  SceneVisual {
    "behaviors": Array [],
    "coloredMeshItems": undefined,
    "element": Object {
      "displayName": "MockElement3",
      "id": "MockElementId3",
      "objectIDs": Array [
        "elementObject2",
        "elementObject3",
      ],
      "primaryTwinID": "mockElementTwinId3",
      "twinAliases": Object {
        "TestAlias1": "aliasedTwinId1",
        "TestAlias2": "aliasedTwinId2",
      },
      "type": "TwinToObjectMapping",
    },
    "twins": Object {
      "PrimaryTwin": undefined,
      "TestAlias1": undefined,
      "TestAlias2": undefined,
    },
  },
]
`;

exports[`ViewerConfigUtility Scene Visuals returns visuals when valid inputs 1`] = `
Array [
  SceneVisual {
    "behaviors": Array [
      Object {
        "datasources": Array [
          Object {
            "elementIDs": Array [
              "MockElementId1",
            ],
            "type": "ElementTwinToObjectMappingDataSource",
          },
        ],
        "displayName": "Mock behavior 1",
        "id": "mockBehavior1",
        "visuals": Array [
          Object {
            "objectIDs": Object {
              "expression": "N/A",
            },
            "title": "Pop over visual 1",
            "type": "Popover",
            "widgets": Array [
              Object {
                "id": "widgetId1",
                "type": "Gauge",
                "valueExpression": "PrimaryTwin.testProperty",
                "widgetConfiguration": Object {
                  "label": "My widget 1",
                  "valueRanges": Array [
                    Object {
                      "id": "valuerange1",
                      "values": Array [
                        0,
                        100,
                      ],
                      "visual": Object {
                        "color": "blue",
                      },
                    },
                  ],
                },
              },
            ],
          },
          Object {
            "expressionType": "CategoricalValues",
            "objectIDs": Object {
              "expression": "N/A",
            },
            "type": "ExpressionRangeVisual",
            "valueExpression": "PrimaryTwin.Temperature",
            "valueRanges": Array [
              Object {
                "id": "valuerange1",
                "values": Array [
                  true,
                ],
                "visual": Object {
                  "color": "#d6940f",
                  "iconName": "Frigid",
                  "labelExpression": "Temp too hot",
                },
              },
            ],
          },
        ],
      },
      Object {
        "datasources": Array [
          Object {
            "elementIDs": Array [
              "MockElementId1",
              "MockElementId2",
              "MockElementId3",
            ],
            "type": "ElementTwinToObjectMappingDataSource",
          },
        ],
        "displayName": "Mock behavior 2",
        "id": "mockBehavior2",
        "visuals": Array [
          Object {
            "expressionType": "CategoricalValues",
            "objectIDs": Object {
              "expression": "N/A",
            },
            "type": "ExpressionRangeVisual",
            "valueExpression": "PrimaryTwin.Temperature",
            "valueRanges": Array [
              Object {
                "id": "valuerange1",
                "values": Array [
                  true,
                ],
                "visual": Object {
                  "color": "#d6940f",
                  "iconName": "Frigid",
                  "labelExpression": "Temp too hot",
                },
              },
            ],
          },
          Object {
            "expressionType": "NumericRange",
            "objectIDs": Object {
              "expression": "N/A",
            },
            "type": "ExpressionRangeVisual",
            "valueExpression": "PrimaryTwin.Temperature",
            "valueRanges": Array [
              Object {
                "id": "valuerange1",
                "values": Array [
                  0,
                  100,
                ],
                "visual": Object {
                  "color": "blue",
                },
              },
            ],
          },
        ],
      },
    ],
    "coloredMeshItems": undefined,
    "element": Object {
      "displayName": "MockElement1",
      "id": "MockElementId1",
      "objectIDs": Array [
        "elementObject1",
        "elementObject2",
      ],
      "primaryTwinID": "mockElementTwinId1",
      "type": "TwinToObjectMapping",
    },
    "twins": Object {
      "PrimaryTwin": Object {
        "$dtId": "mockElementTwinId1",
        "$metadata": Object {
          "$model": "",
        },
        "InFlow": 60,
        "OutFlow": 35,
      },
    },
  },
  SceneVisual {
    "behaviors": Array [
      Object {
        "datasources": Array [
          Object {
            "elementIDs": Array [
              "MockElementId1",
              "MockElementId2",
              "MockElementId3",
            ],
            "type": "ElementTwinToObjectMappingDataSource",
          },
        ],
        "displayName": "Mock behavior 2",
        "id": "mockBehavior2",
        "visuals": Array [
          Object {
            "expressionType": "CategoricalValues",
            "objectIDs": Object {
              "expression": "N/A",
            },
            "type": "ExpressionRangeVisual",
            "valueExpression": "PrimaryTwin.Temperature",
            "valueRanges": Array [
              Object {
                "id": "valuerange1",
                "values": Array [
                  true,
                ],
                "visual": Object {
                  "color": "#d6940f",
                  "iconName": "Frigid",
                  "labelExpression": "Temp too hot",
                },
              },
            ],
          },
          Object {
            "expressionType": "NumericRange",
            "objectIDs": Object {
              "expression": "N/A",
            },
            "type": "ExpressionRangeVisual",
            "valueExpression": "PrimaryTwin.Temperature",
            "valueRanges": Array [
              Object {
                "id": "valuerange1",
                "values": Array [
                  0,
                  100,
                ],
                "visual": Object {
                  "color": "blue",
                },
              },
            ],
          },
        ],
      },
    ],
    "coloredMeshItems": undefined,
    "element": Object {
      "displayName": "MockElement3",
      "id": "MockElementId3",
      "objectIDs": Array [
        "elementObject2",
        "elementObject3",
      ],
      "primaryTwinID": "mockElementTwinId3",
      "twinAliases": Object {
        "TestAlias1": "aliasedTwinId1",
        "TestAlias2": "aliasedTwinId2",
      },
      "type": "TwinToObjectMapping",
    },
    "twins": Object {
      "PrimaryTwin": Object {
        "$dtId": "mockElementTwinId3",
        "$metadata": Object {
          "$model": "",
        },
        "Temperature": 99,
      },
      "TestAlias1": Object {
        "$dtId": "aliasedTwinId1",
        "$metadata": Object {
          "$model": "",
        },
        "InFlow": 60,
        "OutFlow": 35,
      },
      "TestAlias2": Object {
        "$dtId": "aliasedTwinId1",
        "$metadata": Object {
          "$model": "",
        },
        "InFlow": 60,
        "OutFlow": 35,
      },
    },
  },
]
`;
